name: Release

on:
  push:
    tags:
      - v*

env:
  GO_VERSION: 1.14

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.prepare.outputs.tag }}
    steps:
      - name: Prepare
        id: prepare
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          if [[ "$GITHUB_REF" == refs/heads/* ]]; then
            TAG=${GITHUB_REF#refs/heads/}
          elif [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          else
            TAG=$GITHUB_REF
          fi
          echo "::set-output name=tag::${TAG}"

  release:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: make build

      - name: Archive
        run: cd ./target && tar cf ../alertmanager2discord.tar.gz ./*

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare.outputs.tag }}
          release_name: ${{ needs.prepare.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./alertmanager2discord.tar.gz
          asset_name: alertmanager2discord.tar.gz
          asset_content_type: application/gzip

  docker:
    runs-on: ubuntu-latest
    needs: prepare
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ needs.prepare.outputs.tag }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
